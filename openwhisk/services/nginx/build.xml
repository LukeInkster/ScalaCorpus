<!-- targets in this file should be called from the parent directory -->
<project basedir="../..">
    <import file="../../build.xml" />

    <!-- build the configuration for the reverse proxy and install it -->
    <target name="buildProxy">
        <var file="whisk.properties" />
        <property name="whisk.home" value="../.." />

        <!-- copy files needed to build image to a scratch space -->
        <tempfile property="nginx.scratch" prefix="nginx" destDir="${docker.scratch}" />
        <mkdir dir="${nginx.scratch}/nginx" />
        <exec executable="/bin/bash" failonerror="true" dir="services/nginx" output="${nginx.scratch}/nginx/nginx.conf">
            <env key="CONTROLLER_HOST" value="${controller.host}" />
            <env key="CONTROLLER_PORT" value="${controller.host.port}" />

            <env key="DEPLOY_WITH_SSL" value="Y" />

            <arg line="generateProxyConf.sh" />
        </exec>

        <!-- copy nginx configuration files to directory that is mounted inside nginx container -->
        <copy file="${nginx.scratch}/nginx/nginx.conf" tofile="${nginx.conf.dir}/nginx.conf" failonerror="true" />
        <copy file="${whisk.ssl.cert}" tofile="${nginx.conf.dir}/whisk-cert.pem" failonerror="true" />
        <copy file="${whisk.ssl.key}" tofile="${nginx.conf.dir}/whisk-key.pem" failonerror="true" />

        <!-- clean up -->
        <delete dir="${nginx.scratch}" />
    </target>


    <!-- start the reverse proxy service on the edge -->
    <target name="startProxy" depends="buildProxy">
        <var file="whisk.properties" />
        <exec executable="docker" failonerror="true">
            <arg line="--host tcp://${edge.docker.endpoint}" />
            <arg line="${docker.tls.cmd}" />
            <arg line="run" />
            <arg line="${docker.restart.opts}" />
            <arg line="${docker.timezone.mount}" />
            <!-- arg line="${docker.syslog.driver}" /-->
            <arg line="-v '${whisk.logs.dir}'/nginx:/logs" />
            <arg line="-v '${nginx.conf.dir}':/etc/nginx" />
            <arg line="-h nginx" />
            <arg line="-d --name nginx -p 80:80 -p 443:443 -p 8443:8443 nginx" />
        </exec>
    </target>
</project>
