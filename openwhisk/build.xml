<project>
    <import file="config/config.xml" />

    <!-- clean temporary build files created by build script -->
    <target name="dust">
        <exec executable="/bin/date" />
        <delete dir="logs" />
        <delete failonerror="false">
            <fileset dir="." includes="**/*.pyc" />
            <fileset dir="/tmp" includes="**/wsk*.log" />
            <fileset dir="/tmp" includes="**/wsk*.tmp" />
        </delete>
    </target>

    <!-- scan the code base, checking some conventions that are enforced -->
    <target name="scanCode" depends="writePropertyFile">
        <var file="whisk.properties" />
        <exec executable="${python.27}" failonerror="true">
            <arg value="${openwhisk.home}/tools/build/scanCode.py" />
            <arg value="${basedir}" />
        </exec>
    </target>

    <!-- kill all containers, garbage collect docker images, and delete scratch directories -->
    <target name="clean" depends="dust,teardown">
        <exec executable="./gradlew" failonerror="true">
            <env key="OPENWHISK_HOME" value="${openwhisk.home}" />
            <arg value="clean" />
        </exec>
    </target>

    <!-- compile and build images -->
    <target name="build" depends="writePropertyFile">
        <var file="whisk.properties" />
        <ant target="scanCode" />
        <exec executable="./gradlew" failonerror="true">
            <env key="OPENWHISK_HOME" value="${openwhisk.home}" />
            <arg value="distDocker" />
            <arg value="-PdockerHost=${main.docker.endpoint}" />
        </exec>
        <ant antfile="${openwhisk.home}/services/nginx/build.xml" target="buildProxy" />
        <ant antfile="tools/build.xml" target="build" />
    </target>

    <!-- run unit tests-->
    <target name="run" depends="writePropertyFile">
        <ant antfile="tests/build.xml" target="runTests" />
    </target>

    <!-- deperacated: deploy containers using ant -->
    <target name="deploy-legacy" depends="writePropertyFile">
        <antcall target="deployDatabase" />
        <ant antfile="${openwhisk.home}/services/nginx/build.xml" target="startProxy" />
        <ant antfile="services/build.xml" target="deploy" />
        <ant antfile="core/build.xml" target="deploy" />
        <ant antfile="tools/build.xml" target="deploy" />
        <antcall target="installCatalog" />
    </target>

    <!-- deploy containers with ansible -->
    <target name="deploy" depends="writePropertyFile">
        <exec executable="ansible-playbook" failonerror="true" dir="${basedir}/ansible">
            <arg value="-i" />
            <arg value="environments/${deploy.target}" />
            <arg value="openwhisk.yml" />
        </exec>
    </target>

    <!-- teardown and deploy all services -->
    <target name="redeploy" depends="teardownRedeploy,deploy" />

    <target name="teardownLocal">
        <exec executable="/bin/bash">
            <arg value="tools/docker/cleanDocker.sh" />
        </exec>
    </target>

    <target name="teardownLocalRedeploy">
        <exec executable="/bin/bash">
            <arg value="tools/docker/cleanDocker.sh" />
            <arg value="couchdb" />
        </exec>
    </target>

    <!-- kill all containers, garbage collect docker images -->
    <target name="teardown" depends="teardownLocal,writePropertyFile">
        <var file="whisk.properties" />
        <exec executable="/bin/bash">
            <env key="DOCKER_PORT" value="${docker.port}" />
            <arg value="tools/docker/cleanAllDockers.sh" />
            <arg value="${basedir}/whisk.properties" />
        </exec>
    </target>

    <target name="teardownRedeploy" depends="teardownLocalRedeploy,writePropertyFile">
        <var file="whisk.properties" />
        <exec executable="/bin/bash">
            <env key="DOCKER_PORT" value="${docker.port}" />
            <arg value="tools/docker/cleanAllDockers.sh" />
            <arg value="${basedir}/whisk.properties" />
            <arg value="couchdb" />
        </exec>
    </target>

    <!-- Caller must have loaded whisk.prop -->
    <target name="waitComponent">
        <exec executable="${python.27}" failonerror="true">
            <arg value="${openwhisk.home}/tools/health/isAlive" />
            <arg value="-d" />
            <arg value="${basedir}" />
            <arg line="--wait 60 ${component}" />
        </exec>
    </target>

    <!-- do any database maintenance that must happen immediately before deploying -->
    <target name="deployDatabase">
        <var file="whisk.properties" />
        <echo message="wiping databases with prefix ${db.prefix}" />
        <exec dir="${openwhisk.home}/tools/db" executable="/bin/bash" failonerror="true">
            <arg value="wipeTransientDBs.sh" />
        </exec>
    </target>

    <!-- install standard built-in actions using the CLI -->
    <target name="installCatalog">
        <var file="whisk.properties" />
        <exec dir="catalog" executable="/bin/bash" failonerror="true">
            <env key="PYTHON" value="${python.27}" />
            <arg value="installCatalog.sh" />
            <arg value="../config/keys/auth.whisk.system" />
        </exec>
    </target>

    <!-- fetch the docker logs from all local containers to ./logs on this host -->
    <target name="copyOutLogs">
        <var file="whisk.properties" />
        <delete dir="logs" />
        <mkdir dir="logs" />
        <exec executable="/bin/bash">
            <env key="WHISK_LOGS_DIR" value="${whisk.logs.dir}" />
            <arg value="tools/logs/copyLogs.sh" />
            <arg value="${basedir}" />
        </exec>
    </target>

</project>
