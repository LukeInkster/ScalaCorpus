%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D131) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1554 168
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1554 168
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
1410.8719 85.218002 m
1410.8719 67.582001 1416.802 53.080002 1428.666 41.698002 c
1440.4561 30.33 1454.084 24.646 1469.532 24.646 c
1486.278 24.646 1500.4139 30.448 1511.944 42.018002 c
1523.4561 53.736 1529.21 67.987999 1529.21 84.807999 c
1529.21 101.832 1523.53 116.084 1512.146 127.598 c
1500.8361 139.17 1486.83 144.95599 1470.142 144.95599 c
1453.53 144.95599 1439.496 139.17 1428.052 127.598 c
1416.6 116.158 1410.8719 102.034 1410.8719 85.218002 c
1410.8719 85.218002 l
h
1386.576 85.480003 m
1386.576 107.952 1394.8101 127.278 1411.292 143.396 c
1427.704 159.54401 1447.424 167.618 1470.462 167.618 c
1493.214 167.618 1512.728 159.472 1529.0081 143.192 c
1545.3459 126.928 1553.522 107.37 1553.522 84.545998 c
1553.522 61.576 1545.316 42.108002 1528.906 26.106001 c
1512.422 10.044 1492.53 2 1469.21 2 c
1448.604 2 1430.08 9.1400003 1413.67 23.424 c
1395.598 39.206001 1386.576 59.886002 1386.576 85.480003 c
1386.576 85.480003 l
h
1386.576 85.480003 m
W*
0 0 1554 168 rc
1376.576 177.618 m
1563.522 177.618 l
1563.522 -8 l
1376.576 -8 l
h
f
Q
q
1293.578 164.616 m
1363.9139 164.616 l
1363.9139 147.914 l
1293.578 147.914 l
1293.578 164.616 l
h
1293.578 164.616 m
W*
0 0 1554 168 rc
1283.578 174.616 m
1373.9139 174.616 l
1373.9139 137.914 l
1283.578 137.914 l
h
f
Q
q
1316.694 157.06599 m
1340.796 157.06599 l
1340.796 10.29 l
1316.694 10.29 l
1316.694 157.06599 l
h
1316.694 157.06599 m
W*
0 0 1554 168 rc
1306.694 167.06599 m
1350.796 167.06599 l
1350.796 0.28999999 l
1306.694 0.28999999 l
h
f
Q
q
1293.578 21.601999 m
1363.9139 21.601999 l
1363.9139 4.8979998 l
1293.578 4.8979998 l
1293.578 21.601999 l
h
1293.578 21.601999 m
W*
0 0 1554 168 rc
1283.578 31.601999 m
1373.9139 31.601999 l
1373.9139 -5.1020002 l
1283.578 -5.1020002 l
h
f
Q
0.21170345 0.62719434 0.80599272 sc
q
1168.068 117.44 m
1182.552 117.44 l
1182.552 97.269997 l
1188.34 104.992 1194.752 110.78 1201.792 114.598 c
1208.83 118.416 1216.4821 120.34 1224.76 120.34 c
1233.17 120.34 1240.63 118.198 1247.146 113.926 c
1253.66 109.642 1258.468 103.9 1261.574 96.641998 c
1264.678 89.416 1266.238 78.134003 1266.238 62.830002 c
1266.238 4.8979998 l
1251.75 4.8979998 l
1251.75 58.576 l
1251.75 71.545998 1251.212 80.204002 1250.134 84.545998 c
1248.458 91.994003 1245.236 97.603996 1240.486 101.364 c
1235.734 105.11 1229.526 106.992 1221.8621 106.992 c
1213.1021 106.992 1205.26 104.106 1198.322 98.302002 c
1191.4 92.503998 1186.824 85.334 1184.624 76.792 c
1183.238 71.197998 1182.552 60.993999 1182.552 46.174 c
1182.552 4.8979998 l
1168.068 4.8979998 l
1168.068 117.44 l
W*
0 0 1554 168 rc
1158.068 130.34 m
1276.238 130.34 l
1276.238 -5.1020002 l
1158.068 -5.1020002 l
h
f
Q
q
1081.92 106.172 m
1069.88 106.172 1059.536 101.714 1050.8781 92.825996 c
1042.234 83.931999 1037.906 73.178001 1037.906 60.556 c
1037.906 52.41 1039.874 44.816002 1043.822 37.792 c
1047.76 30.77 1053.092 25.332001 1059.8101 21.497999 c
1066.516 17.68 1073.8879 15.756 1081.92 15.756 c
1089.95 15.756 1097.3101 17.68 1104.03 21.497999 c
1110.746 25.332001 1116.066 30.77 1120.0179 37.792 c
1123.952 44.816002 1125.934 52.41 1125.934 60.556 c
1125.934 73.178001 1121.592 83.931999 1112.9041 92.825996 c
1104.2159 101.714 1093.884 106.172 1081.92 106.172 c
1081.92 106.172 l
h
1081.964 120.34 m
1099.306 120.34 1113.678 114.058 1125.072 101.508 c
1135.438 90.054001 1140.624 76.514 1140.624 60.848 c
1140.624 45.136002 1135.142 31.393999 1124.2 19.632 c
1113.238 7.8860002 1099.176 2 1081.964 2 c
1064.694 2 1050.584 7.8860002 1039.64 19.632 c
1028.696 31.393999 1023.216 45.136002 1023.216 60.848 c
1023.216 76.444 1028.3879 89.966003 1038.7679 101.408 c
1050.162 114.03 1064.5601 120.34 1081.964 120.34 c
1081.964 120.34 l
h
1081.964 120.34 m
W*
0 0 1554 168 rc
1013.216 130.34 m
1150.624 130.34 l
1150.624 -8 l
1013.216 -8 l
h
f
Q
q
983.03601 117.44 m
997.52197 117.44 l
997.52197 4.8979998 l
983.03601 4.8979998 l
983.03601 117.44 l
h
990.21997 163.77 m
993.53003 163.77 996.34003 162.604 998.672 160.272 c
1001.004 157.912 1002.17 155.086 1002.17 151.79201 c
1002.17 148.54201 1001.004 145.758 998.672 143.396 c
996.34003 141.064 993.53003 139.884 990.21997 139.884 c
986.99799 139.884 984.21399 141.064 981.88202 143.396 c
979.54999 145.758 978.38599 148.54201 978.38599 151.79201 c
978.38599 155.086 979.54999 157.912 981.88202 160.272 c
984.21399 162.604 986.99799 163.77 990.21997 163.77 c
990.21997 163.77 l
h
990.21997 163.77 m
W*
0 0 1554 168 rc
968.38599 173.77 m
1012.17 173.77 l
1012.17 -5.1020002 l
968.38599 -5.1020002 l
h
f
Q
q
925.23401 159.224 m
939.71997 159.224 l
939.71997 117.44 l
962.67603 117.44 l
962.67603 104.922 l
939.71997 104.922 l
939.71997 4.8979998 l
925.23401 4.8979998 l
925.23401 104.922 l
905.48602 104.922 l
905.48602 117.44 l
925.23401 117.44 l
925.23401 159.224 l
W*
0 0 1554 168 rc
895.48602 169.224 m
972.67603 169.224 l
972.67603 -5.1020002 l
895.48602 -5.1020002 l
h
f
Q
q
887.73401 94.064003 m
876.25 86.935997 l
866.34198 100.096 852.79999 106.684 835.646 106.684 c
821.948 106.684 810.56598 102.268 801.51599 93.466003 c
792.45001 84.632004 787.91602 73.938004 787.91602 61.313999 c
787.91602 53.124001 790.00201 45.414001 794.16998 38.172001 c
798.33801 30.944 804.04999 25.332001 811.32397 21.337999 c
818.59601 17.344 826.72803 15.35 835.76398 15.35 c
852.29199 15.35 865.78601 21.934 876.25 35.112 c
887.73401 27.559999 l
882.35797 19.458 875.14203 13.162 866.06403 8.7040005 c
856.99799 4.2420001 846.664 2 835.09399 2 c
817.29797 2 802.53601 7.652 790.81799 18.964001 c
779.09998 30.271999 773.22601 44.029999 773.22601 60.236 c
773.22601 71.136002 775.98199 81.251999 781.46002 90.608002 c
786.94 99.933998 794.46002 107.222 804.04999 112.468 c
813.64001 117.716 824.36798 120.34 836.22998 120.34 c
843.664 120.34 850.862 119.204 857.79999 116.928 c
864.72198 114.656 870.59601 111.682 875.43402 108.024 c
880.24402 104.368 884.354 99.718002 887.73401 94.064003 c
W*
0 0 1554 168 rc
763.22601 130.34 m
897.73401 130.34 l
897.73401 -8 l
763.22601 -8 l
h
f
Q
q
732.94397 117.44 m
747.42999 117.44 l
747.42999 4.8979998 l
732.94397 4.8979998 l
732.94397 117.44 l
h
740.12799 163.77 m
743.422 163.77 746.25 162.604 748.58197 160.272 c
750.914 157.912 752.08002 155.086 752.08002 151.79201 c
752.08002 148.54201 750.914 145.758 748.58197 143.396 c
746.25 141.064 743.422 139.884 740.12799 139.884 c
736.90802 139.884 734.12598 141.064 731.79199 143.396 c
729.46002 145.758 728.29401 148.54201 728.29401 151.79201 c
728.29401 155.086 729.46002 157.912 731.79199 160.272 c
734.12598 162.604 736.90802 163.77 740.12799 163.77 c
740.12799 163.77 l
h
740.12799 163.77 m
W*
0 0 1554 168 rc
718.29401 173.77 m
762.08002 173.77 l
762.08002 -5.1020002 l
718.29401 -5.1020002 l
h
f
Q
q
642.30798 106.376 m
634.26202 106.376 626.81598 104.394 619.99597 100.432 c
613.19 96.466003 607.75201 90.900002 603.71399 83.744003 c
599.69397 76.587997 597.68201 69.012001 597.68201 61.023998 c
597.68201 53.096001 599.72198 45.518002 603.77399 38.287998 c
607.84003 31.058001 613.30603 25.417999 620.15601 21.382 c
627.00403 17.360001 634.34998 15.35 642.21997 15.35 c
650.13397 15.35 657.64001 17.344 664.73798 21.337999 c
671.83398 25.332001 677.28601 30.738001 681.104 37.557999 c
684.93597 44.380001 686.84601 52.060001 686.84601 60.602001 c
686.84601 73.615997 682.56201 84.501999 673.992 93.246002 c
665.40802 102.006 654.84198 106.376 642.30798 106.376 c
642.30798 106.376 l
h
700.19598 160.884 m
700.19598 4.8979998 l
685.914 4.8979998 l
685.914 24.238001 l
679.84998 16.864 673.03003 11.31 665.47998 7.5960002 c
657.93201 3.8659999 649.68201 2 640.70599 2 c
624.78998 2 611.17798 7.7719998 599.89801 19.326 c
588.63 30.884001 582.992 44.936001 582.992 61.490002 c
582.992 77.681999 588.67603 91.540001 600.05798 103.056 c
611.44 114.568 625.12598 120.34 641.12598 120.34 c
650.36798 120.34 658.71802 118.372 666.20801 114.436 c
673.70001 110.516 680.258 104.614 685.914 96.760002 c
685.914 160.884 l
700.19598 160.884 l
700.19598 160.884 l
h
700.19598 160.884 m
W*
0 0 1554 168 rc
572.992 170.884 m
710.19598 170.884 l
710.19598 -8 l
572.992 -8 l
h
f
Q
q
545.52197 72.538002 m
543.58398 80.260002 540.78601 86.440002 537.08398 91.059998 c
533.38 95.68 528.5 99.410004 522.41998 102.238 c
516.35797 105.066 509.95999 106.466 503.272 106.466 c
492.224 106.466 482.72198 102.924 474.79401 95.825996 c
468.99399 90.653999 464.59201 82.884003 461.63199 72.538002 c
545.52197 72.538002 l
545.52197 72.538002 l
h
545.52197 42.237999 m
557.71997 35.824001 l
553.72803 27.969999 549.09198 21.615999 543.84601 16.794001 c
538.59802 11.966 532.71002 8.2959995 526.15198 5.7880001 c
519.59399 3.2520001 512.16199 2 503.884 2 c
485.51999 2 471.17999 8.0179996 460.81799 20.056 c
450.45599 32.080002 445.29599 45.692001 445.29599 60.848 c
445.29599 75.129997 449.668 87.853996 458.44199 99.031998 c
469.54599 113.228 484.41199 120.34 503.06799 120.34 c
522.24799 120.34 537.578 113.054 549.034 98.508003 c
557.16602 88.234001 561.30402 75.405998 561.45203 60.032001 c
460.19 60.032001 l
460.45401 46.959999 464.63599 36.245998 472.724 27.882 c
480.798 19.516001 490.76801 15.35 502.64401 15.35 c
508.37201 15.35 513.94 16.337999 519.362 18.336 c
524.78198 20.334 529.388 22.969999 533.20801 26.280001 c
536.99597 29.572001 541.10602 34.891998 545.52197 42.237999 c
545.52197 42.237999 l
h
545.52197 42.237999 m
W*
0 0 1554 168 rc
435.29599 130.34 m
571.45203 130.34 l
571.45203 -8 l
435.29599 -8 l
h
f
Q
q
385.23599 117.44 m
400.02802 117.44 l
400.02802 100.984 l
404.42999 107.484 409.09399 112.324 413.98999 115.53 c
418.88599 118.738 423.98801 120.34 429.29401 120.34 c
433.302 120.34 437.57199 119.058 442.12 116.508 c
434.57001 104.31 l
431.53799 105.622 429.00201 106.262 426.93201 106.262 c
422.09399 106.262 417.42999 104.28 412.95599 100.314 c
408.48199 96.351997 405.07199 90.202003 402.70999 81.865997 c
400.93201 75.452003 400.02802 62.48 400.02802 42.966 c
400.02802 4.8979998 l
385.23599 4.8979998 l
385.23599 117.44 l
W*
0 0 1554 168 rc
375.23599 130.34 m
452.12 130.34 l
452.12 -5.1020002 l
375.23599 -5.1020002 l
h
f
Q
q
283.02802 142.172 m
283.02802 90.550003 l
308.78 90.227997 l
319.202 90.227997 326.80801 91.192001 331.64801 93.071999 c
336.45801 94.966003 340.26001 98.028 343.01599 102.268 c
345.784 106.496 347.15399 111.216 347.15399 116.464 c
347.15399 121.55 345.784 126.214 343.01599 130.45399 c
340.26001 134.68201 336.63199 137.68401 332.11401 139.476 c
327.59601 141.26801 320.19199 142.172 309.918 142.172 c
283.02802 142.172 l
283.02802 142.172 l
h
267.81201 157.06599 m
298.12601 157.06599 l
315.5 157.06599 327.216 156.308 333.29401 154.778 c
341.98001 152.636 349.078 148.25 354.60199 141.59 c
360.12601 134.944 362.87799 126.578 362.87799 116.508 c
362.87799 106.376 360.18399 98.012001 354.82001 91.424004 c
349.42801 84.837997 342.02399 80.405998 332.57999 78.134003 c
325.672 76.472 312.79001 75.655998 293.88599 75.655998 c
283.02802 75.655998 l
283.02802 4.8979998 l
267.81201 4.8979998 l
267.81201 157.06599 l
267.81201 157.06599 l
h
267.81201 157.06599 m
W*
0 0 1554 168 rc
257.81201 167.06599 m
372.87799 167.06599 l
372.87799 -5.1020002 l
257.81201 -5.1020002 l
h
f
Q
1 1 1 sc
q
62.440159 117.5983 m
77.109352 123.26598 93.589378 126.72977 111.0079 126.72977 c
128.36958 126.72977 144.80148 123.37823 159.43719 117.84554 c
159.43719 117.84554 l
162.82149 111.05977 170.05458 106.36117 178.42383 106.36117 c
179.71689 106.36117 180.9825 106.47301 182.21078 106.68713 c
206.53091 91.698242 222 70.795044 222 52.917763 c
222 25.817602 172.2975 4.0847459 111.0079 4.0847459 c
49.688667 4.0847459 0 24.189499 0 52.917763 c
0 70.262634 15.670612 91.404854 40.27137 106.60921 c
41.348083 106.44596 42.451878 106.36117 43.576172 106.36117 c
51.854786 106.36117 59.008545 110.9459 62.440159 117.5983 c
h
135.28125 96.198799 m
135.28125 94.134583 133.52937 92.493179 131.3799 92.493179 c
129.22647 92.493179 127.47656 94.134583 127.47656 96.198799 c
127.47656 98.203186 129.22647 99.86055 131.3799 99.86055 c
133.52937 99.86055 135.28125 98.203186 135.28125 96.198799 c
h
94.523438 96.198799 m
94.523438 94.134583 92.773094 92.493179 90.621094 92.493179 c
88.469093 92.493179 86.71875 94.134583 86.71875 96.198799 c
86.71875 98.203186 88.469093 99.86055 90.621094 99.86055 c
92.773094 99.86055 94.523438 98.203186 94.523438 96.198799 c
h
94.523438 96.198799 m
W*
0 0 1554 168 rc
-10 136.72978 m
232 136.72978 l
232 -5.9152541 l
-10 -5.9152541 l
h
f
Q
q
82.382812 126.72459 m
82.382812 106.15635 65.034935 89.459557 43.576172 89.459557 c
22.147623 89.459557 4.7695312 106.15635 4.7695312 126.72459 c
4.7695312 147.30113 22.147623 164 43.576172 164 c
65.034935 164 82.382812 147.30113 82.382812 126.72459 c
h
64.605469 126.50795 m
64.605469 115.39894 55.19952 106.36117 43.576172 106.36117 c
31.968832 106.36117 22.546875 115.39894 22.546875 126.50795 c
22.546875 137.64165 31.968832 146.66501 43.576172 146.66501 c
55.19952 146.66501 64.605469 137.64165 64.605469 126.50795 c
h
64.605469 126.50795 m
W*
0 0 1554 168 rc
-5.2304688 174 m
92.382812 174 l
92.382812 79.459557 l
-5.2304688 79.459557 l
h
f
Q
q
51.597656 126.73183 m
51.597656 122.42542 47.919601 118.92903 43.359375 118.92903 c
38.813282 118.92903 35.121094 122.42542 35.121094 126.73183 c
35.121094 131.06079 38.813282 134.53052 43.359375 134.53052 c
47.919601 134.53052 51.597656 131.06079 51.597656 126.73183 c
W*
0 0 1554 168 rc
25.121094 144.53052 m
61.597656 144.53052 l
61.597656 108.92903 l
25.121094 108.92903 l
h
f
Q
q
217.23047 126.72459 m
217.23047 106.15635 199.88258 89.459557 178.42383 89.459557 c
156.99529 89.459557 139.61719 106.15635 139.61719 126.72459 c
139.61719 147.30113 156.99529 164 178.42383 164 c
199.88258 164 217.23047 147.30113 217.23047 126.72459 c
h
199.45312 126.50795 m
199.45312 115.39894 190.04718 106.36117 178.42383 106.36117 c
166.81648 106.36117 157.39453 115.39894 157.39453 126.50795 c
157.39453 137.64165 166.81648 146.66501 178.42383 146.66501 c
190.04718 146.66501 199.45312 137.64165 199.45312 126.50795 c
h
199.45312 126.50795 m
W*
0 0 1554 168 rc
129.61719 174 m
227.23047 174 l
227.23047 79.459557 l
129.61719 79.459557 l
h
f
Q
q
186.44531 126.73183 m
186.44531 122.42542 182.76726 118.92903 178.20703 118.92903 c
173.66093 118.92903 169.96875 122.42542 169.96875 126.73183 c
169.96875 131.06079 173.66093 134.53052 178.20703 134.53052 c
182.76726 134.53052 186.44531 131.06079 186.44531 126.73183 c
W*
0 0 1554 168 rc
159.96875 144.53052 m
196.44531 144.53052 l
196.44531 108.92903 l
159.96875 108.92903 l
h
f
ep
end
%%Trailer
%%EOF
