@(pov: Pov, pgn: chess.format.pgn.Pgn)(implicit req: RequestHeader)
@defining(routes.Round.watcher(pov.gameId, pov.color.name).absoluteURL(true)) { url =>
<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <id>@url</id>
  <link rel="alternate" type="text/html" href="@url"/>
  <link rel="self" type="application/atom+xml" href="@url"/>
  <title>@titleGame(pov.game)</title>
  @pov.game.updatedAt.map { date =>
  <updated>@atomDate(date)</updated>
  }
  <entry>
    <id>Start</id>
    <link rel="alternate" type="text/html" href="@url"/>
    <title>@describePov(pov)</title>
  </entry>
  @pgn.turns.map { turn =>
  @turn.white.map { move =>
  @defining(turn.number * 2 - 1) { ply =>
  <entry>
    <id>@ply</id>
    <link rel="alternate" type="text/html" href="@url#@ply"/>
    <title>@(turn.number). @move.san</title>
  </entry>
  }
  }
  @turn.black.map { move =>
  @defining(turn.number * 2) { ply =>
  <entry>
    <id>@ply</id>
    <link rel="alternate" type="text/html" href="@url#@ply"/>
    <title>@(turn.number)... @move.san</title>
  </entry>
  }
  }
  }
  <entry>
    <id>Result</id>
    <link rel="alternate" type="text/html" href="@url"/>
    <title>@gameResult(pov.game)</title>
  </entry>
</feed>
}
